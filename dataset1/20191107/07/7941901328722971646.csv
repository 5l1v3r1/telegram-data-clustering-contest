,src,lang,text
0,"











Microsoft's Rust Experiments Are Going Well, But Some Features Are Missing
07 Nov 2019, 07:50 by msmash
Microsoft gave a status update today on its experiments on using the Rust programming language instead of C and C++ to write Windows components. From a report: Microsoft began experimenting with Rust over the summer. The Redmond-based software giant said it was interested in Rust because, over the past decade, more than 70% of the security patches it shipped out fixed memory-related bugs, an issue that Rust was created to address.[...] Today, almost four months later, we got the first feedback. ""I've been tasked with an experimental rewrite of a low-level system component of the Windows codebase (sorry, we can't say which one yet),"" said Adam Burch, Software Engineer at the Microsoft Hyper-V team, in a blog post today. ""Though the project is not yet finished, I can say that my experience with Rust has been generally positive,"" Burch added. ""In general, new components or existing components with clean interfaces will be the easiest to port to Rust,"" the Microsoft engineer said. However, not all things went smoothly. It would have been unrealistic if we expected they would. Burch cited the lack of safe transmutation, safe support for C style unions, fallible allocation, and a lack of support for at-scale unit testing, needed for Microsoft's sprawling code-testing infrastructure.


(zdnet.com)




",en,"











Microsoft's Rust Experiments Are Going Well, But Some Features Are Missing
07 Nov 2019, 07:50 by msmash
Microsoft gave a status update today on its experiments on using the Rust programming language instead of C and C++ to write Windows components. From a report: Microsoft began experimenting with Rust over the summer. The Redmond-based software giant said it was interested in Rust because, over the past decade, more than 70% of the security patches it shipped out fixed memory-related bugs, an issue that Rust was created to address.[...] Today, almost four months later, we got the first feedback. ""I've been tasked with an experimental rewrite of a low-level system component of the Windows codebase (sorry, we can't say which one yet),"" said Adam Burch, Software Engineer at the Microsoft Hyper-V team, in a blog post today. ""Though the project is not yet finished, I can say that my experience with Rust has been generally positive,"" Burch added. ""In general, new components or existing components with clean interfaces will be the easiest to port to Rust,"" the Microsoft engineer said. However, not all things went smoothly. It would have been unrealistic if we expected they would. Burch cited the lack of safe transmutation, safe support for C style unions, fallible allocation, and a lack of support for at-scale unit testing, needed for Microsoft's sprawling code-testing infrastructure.


(zdnet.com)




"
