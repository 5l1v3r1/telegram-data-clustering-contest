,src,lang,text
0,"











Schneller Apps entwickeln: Wie RAD und Low Code funktionieren
Wer schnell einen ersten Prototypen seiner App vorzeigen will, kann RAD- und Low-Code-Tools einsetzen. Worauf Entwickler achten sollten, zeigt die aktuelle iX.
07 Nov 2019, 15:00 by Moritz Förster
Gerade in der agilen Softwareentwicklung ist es wichtig, dem Kunden schon früh einen funktionierenden Prototypen der App bieten zu können. Hier kommen häufig Werkzeuge aus den Bereichen Rapid Application Development (RAD) und Low Code zum Einsatz. Wie die Ansätze funktionieren und sich unterscheiden, erklärt Veikko Krypczyk in der iX 11/2019.
Die RAD umfasst vorgefertigte, aber anpassbare Komponenten – die eigentlichen Programmabläufe dahinter müssen Entwickler aber wie gehabt in der IDE schreiben. Low-Code-Dienste gehen hier weiter: In einem GUI können reguläre Nutzer Applikationen zusammenstellen. So reduziert sich zum Beispiel der Aufwand beim Erstellen des User Interface oder beim Modellieren von Workflows.
Zu viele unterschiedliche Werkzeuge im Team behindern die Arbeit jedoch. Auch funktionieren nicht alle Designelemente eines Programms in einem anderen Tool – damit die Entwickler beispielsweise die zuvor in Photoshop entworfenen Grafiken nicht händisch nachbauen müssen, sollte man schon zuvor auf die Kompatibilität der unterschiedlichen Plattformen achten.
Siehe dazu auch:

Programmierung: RAD und Low Code: Von der Idee zum Produkt, iX 11/2019, S. 114

(fo)


",de,"











Develop faster apps: how RAD and low code work
If you want to quickly show a first prototype of your app, you can use RAD and low-code tools. What should look out for developers shows the current iX.
07 Nov 2019, 15:00 by Moritz Förster
Particularly in agile software development, it is important to be able to offer the customer a working prototype of the app at an early stage. Tools from the areas of rapid application development (RAD) and low code are frequently used here. How the approaches work and differ, explains Veikko Krypczyk in the iX 11/2019.
The RAD includes ready-made but customizable components - but developers have to write the actual program flows behind them in the IDE as usual. Low-code services continue here: In a GUI, regular users can put together applications. For example, the effort involved in creating the user interface or modeling workflows is reduced.
However, too many different tools in the team hinder the work. Also, not all design elements of a program work in a different tool - so that developers, for example, do not have to manually rebuild the previously designed in Photoshop graphics, you should pay attention beforehand to the compatibility of different platforms.
See also:

Programming: RAD and Low Code: From Idea to Product, iX 11/2019, p. 114

(Fo)


"
