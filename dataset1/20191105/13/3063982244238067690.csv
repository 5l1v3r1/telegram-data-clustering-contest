,src,lang,text
0,"











Javascript selber zu hosten, lohnt sich bald mehr
Aus Sicherheitsgründen planen mehrere Browserhersteller, künftig ihre Caches nach Webseiten zu trennen. Das Laden von Resourcen über CDN-Netze lohnt sich danach nicht mehr.
05 Nov 2019, 13:05 by Hanno Böck
Mehrere Browserhersteller planen Änderungen, die dazu führen werden, dass Webressourcen nicht mehr über verschiedene Webseiten hinweg gecacht werden. Darüber berichtet der Web-Programmierer Jeff Kaufman in einem Blogpost. Der Grund dafür sind mögliche Seitenkanalangriffe. Für Webseitenbetreiber bedeutet diese Änderung, dass es in vielen Fällen vorteilhaft sein wird, gängige Webressourcen wie beispielsweise Javascript-Bibliotheken oder Fonts selbst zu hosten und nicht von externen Quellen einzubinden.
Bisher war es so: Wenn zwei verschiedene Webseiten dieselbe Datei einbinden, kann diese beim Laden der zweiten Webseite aus dem Cache geladen werden. Üblich ist das etwa bei Javascript-Bibliotheken. Wer die häufig genutzte Jquery-Bibliothek einsetzt, lädt diese häufig von einem von den Jquery-Entwicklern bereitgestellten Host. Auch gibt es verschiedene CDN-Anbieter für gängige Javascript-Bibliotheken.
Gemeinsamer Cache kann für Seitenkanalangriffe genutzt werden
Aus Performancegründen hat das naheliegende Vorteile: Bei fast allen Nutzern dürfte die aktuelle Version der Jquery-Bibliothek bereits im Browsercache vorhanden sein, sie muss nicht erneut heruntergeladen werden.
Doch das Caching kann zu Sicherheitsproblemen führen. Angreifer können dieses Verhalten nutzen, um herauszufinden, ob eine andere Person in jüngerer Zeit auf einer bestimmten Webseite unterwegs war. Dies geht etwa, indem man eine dort eingebundene Ressource aufruft und anschließend misst, wie schnell der Ladevorgang durchgeführt wurde.
Solche Angriffe, die auch Cross-Site-Leaks oder XS-Leaks genannt werden, sind schon länger bekannt, aber sie wurden zuletzt immer weiter verbessert. Das führt jetzt dazu, dass die Entwickler von Chrome und Firefox den Cache künftig nach Webseiten trennen werden. Aktiv ist die Funktion in den Browsern noch nicht, es ist aber davon auszugehen, dass dies in künftigen Versionen zur Standardeinstellung wird. In Safari gibt es bereits jetzt eine entsprechende Funktionalität.
Konkret bedeutet das: Wenn dieselbe Webseite mehrfach aufgerufen wird, werden die Daten aus dem Cache geladen. Ruft aber eine andere Webseite die von der ersten Webseite genutzten Ressourcen ab, werden diese erneut geladen, da die Caches der Seiten getrennt sind.
Laden vom eigenen Host ohne Cache schneller
Wer als Betreiber einer Webseite gängigen Javascript-Code oder andere Ressourcen - beispielsweise Schriftarten - von einem externen Host zieht, sollte sich überlegen, ob dies in Zukunft noch Sinn macht. Denn in Sachen Geschwindigkeit dürfte das Selbsthosten vorteilhafter sein. Dank der HTTP-Funktion Keep-Alive oder mittels HTTP/2 können mehrere Dateien vom selben Host über eine Verbindung abgerufen werden. Generell ist es außerdem natürlich sinnvoll, darauf zu achten, nicht unnötig viele Ressourcen einzubinden und Javascript- sowie CSS-Dateien komprimiert auszuliefern.
Bei vielen externen Ressourcen, die üblicherweise auf Webseiten eingebunden werden, handelt es sich um Code oder Daten unter freien Lizenzen, aus rechtlicher Sicht ist das Selbsthosten daher in vielen Fällen kein Problem. Jquery beispielsweise steht unter der freien MIT-Lizenz. Auch die häufig von Webseiten eingebundenen Google Fonts stehen alle unter freien Lizenzen und können damit legal selbst gehostet werden.
Aus Sicherheits- und Datenschutzgründen hat es ebenfalls Vorteile. So kann beispielsweise eine Kompromittierung der Hosts von Webressourcen dazu führen, dass Webseiten angegriffen werden. Auch vermeidet man dadurch das Übertragen von Daten über den Webseitenbesuch an Dritte.


",de,"











Hosting javascript yourself is worth more soon
For security reasons, several browser manufacturers plan to separate their caches for websites in the future. Loading resources via CDN networks is not worth it anymore.
05 Nov 2019, 13:05 by Hanno Böck
Several browser vendors are planning changes that will cause web resources to no longer be cached across different web pages. This is reported by web programmer Jeff Kaufman in a blog post. The reason for this is possible side channel attacks. For website operators, this change means that in many cases it will be advantageous to host common web resources such as javascript libraries or fonts and not to integrate them from external sources.
So far it was like this: If two different web pages integrate the same file, this can be loaded from the cache when loading the second web page. This is usually the case with javascript libraries. Those who use the popular jquery library often load them from a host provided by the jquery developers. There are also various CDN providers for popular Javascript libraries.
Shared cache can be used for side channel attacks
For performance reasons, this has obvious advantages: For almost all users, the current version of the Jquery library should already be available in the browser cache; it does not have to be downloaded again.
But the caching can lead to security problems. Attackers can use this behavior to find out if another person has recently been on a particular website. This can be done by calling a resource embedded there and then measuring how fast the load was performed.
Such attacks, also known as cross-site leaks or XS leaks, have been known for some time, but they have recently been improved. The result now is that the developers of Chrome and Firefox will separate the cache in the future for websites. The function is not active in the browsers yet, but it is expected that this will become the default setting in future versions. There is already some functionality in Safari.
Specifically, if the same web page is called multiple times, the data is loaded from the cache. However, if another website retrieves the resources used by the first website, they will be reloaded because the caches of the pages are separated.
Load from your own host without cache faster
If you, as the owner of a website, pull common javascript code or other resources - such as fonts - from an external host, you should consider whether this will make any sense in the future. Because in terms of speed, self-service should be more advantageous. Thanks to the HTTP function Keep-Alive or HTTP / 2, several files can be retrieved from the same host via a connection. In general, of course, it makes sense to ensure that you do not spend too many resources and deliver Javascript and CSS files in compressed form.
Many external resources that are typically web pages are code or data under free licenses, so from a legal perspective self-hosting is not a problem in many cases. For example, Jquery is under the free MIT license. The Google Fonts, which are often linked to websites, are all under free licenses and can therefore be legally hosted by them.
For security and privacy reasons, it also has benefits. For example, compromising the hosts of web resources can cause web pages to be attacked. It also avoids the transfer of data via the website visit to third parties.


"
