,src,lang,text
0,"











Open Source, wie es sein soll
Wenn Entwickler mit Zeitdruck nach Lösungen suchen und sich dann für Open Source entscheiden, sollte das anderen als Vorbild dienen, sagen zwei Gardena-Entwickler in einem Vortrag. Der sei auch eine Anleitung dafür, das Management von der Open-Source-Idee zu überzeugen - was auch den Nutzern hilft.
05 Nov 2019, 06:00 by Sebastian Grüner
Das Gateway des Smart Home System von Gardena steuert zentral verschiedene mehr oder weniger smarte Gartengeräte des Marktführers. Trotz anfänglich großer Probleme ist die zugehörige Software inzwischen auf einem Stand, der aus Sicht der Linux-Community sowie der Nutzer als absolut erstrebenswert bezeichnet werden kann. Wie es dazu gekommen ist, haben die beiden zuständigen Entwickler Andreas Müller und Reto Schneider auf dem Open Source Summit in Lyon berichtet.
Mit ihrer Geschichte wollen sie offenbar als eine Art Vorbild dienen: ""Zeigt diesen Vortrag eurem Management!"", forderten sie das Publikum auf. Ihren Weg mit und an der Software nennen die Entwickler in Anlehnung an den Call-for-Papers ""Kriegserzählung"" - was natürlich nur im übertragenen Sinne und als Kategorie für hart erarbeitete Erfahrungen zu verstehen ist.
So entdeckte Golem.de im Frühjahr 2016 beim Test des Gardena Smart System noch einige Hindernisse, die vor allem auf die Software zurückzuführen waren. Und das Unternehmen hatte - leider nicht unüblich - damals auch klar gegen die Lizenzbedingungen des genutzten Linux-Codes verstoßen.
Für die zweite Generation des Geräts wollte das Team von Anfang an alles richtig machen - aus eigener Motivation heraus - wie die beiden mehrfach betonten. Das Thema Open Source wurde in der Führungsetage von Gardena laut Schneider und Müller eher mit Desinteresse und niedriger Priorität behandelt. Daher musste der Open-Source-Ansatz für das Gerät von Grund auf gestaltet werden.
Kritisch für das Projekt war zusätzlich der Zwang, den geplanten Fertigstellungstermin einzuhalten. Denn eine Verschiebung des Marktstarts eines Geräts kann und will sich der Marktführer nicht leisten. Vom Projektstart bis zum geplanten Verkaufsstart hatte das Team nur ein Jahr Zeit, ""einen Backup-Plan gab es nicht"", heißt es im Vortrag der Entwickler. In einem anschließenden Gespräch mit Golem.de sagte Schneider außerdem: ""Open Source hat uns mehr als einmal gerettet"".
Lizenzkonform nur durch sanften Druck
Dafür musste jedoch auch erst für das richtige Verständnis im Unternehmen gesorgt werden. So stellte uns Gardena für die erste Generation des Geräts den unter GPL stehenden Quellcode damals nicht zur Verfügung und war auf entsprechende Anfragen auch nicht vorbereitet. Wie Schneider in dem Vortrag anhand von Screenshots aus dem internen Bugtracker des Unternehmens belegte, wurde die Einhaltung der Lizenzen zunächst auch schlicht nicht als wichtig genug betrachtet.
Das lag laut den Vortragenden klar am damaligen Fehlen des Open-Source-Ansatzes. Das Unternehmen hatte ""wenig bis gar keine Erfahrung mit Elektronik oder Software"", immerhin hat Gardena bisher fast ausschließlich mechanische Teile wie Schläuche, Brausen, Ventile oder Ähnliches hergestellt und vertrieben. Vorherrschend gewesen sei außerdem die Herangehensweise: ""Wenn das Produkt fertiggestellt ist, ist es fertig"". Die Idee, dass Software auch über zehn Jahre lang gepflegt und das Produkt dafür immer wieder angefasst werden muss, ist für ein Hardware-Unternehmen schwer verständlich.
Schneider versuchte, wie er erzählte, seinen Vorgesetzten klar zu machen, dass solch ein Desinteresse in Bezug auf die die Lizenzen das Geschäft mit dem Smart-Home-Geräten wie auch die Reputation des Unternehmens behindern oder gar zerstören könne. Zunächst seien seine Argumente im Unternehmen aber nicht erhört worden. Schneiders Einträge dazu im Bugtracker seien sogar in ihrer Priorität heruntergestuft worden - mit der Begründung, die Lizenzkonformität sei ""kein Release Blocker"".
Die Bemühungen um eine Lizenzkonformität waren letztlich dennoch erfolgreich. Dazu beigetragen hat dem Vortrag zufolge die breite Medienaufmerksamkeit der Klage des Entwicklers Patrick McHardy gegen den Elektronikhersteller Geniatech. Zwar wurde die Klage in zweiter Instanz wegen der wohl geringen Erfolgsaussichten zurückgezogen. In der Vorinstanz hatte das Landgericht Köln aber noch ein Ordnungsgeld von 250.000 Euro oder bis zu sechs Monaten ersatzweise Haft bei Nichteinhaltung der Lizenz angedroht.
Das wiederholte Drängen Schneiders sowie der Verweis auf den möglichen massiven Schaden für das Unternehmen bei Nichteinhaltung waren dann wohl ausschlaggebend dafür, dass Gardena schließlich den Bedingungen der GPL nachkam. Die Entwicklung des Codes kann auf Github nachvollzogen werden.
Vorbildwirkung kann der Vortrag auf zweifache Weise entfalten: Er könnte andere Firmen ermutigen, ebenfalls offener über ihre Probleme und die gefundenen Lösungen sprechen - was heute besonders bei solchen Unternehmen selten ist, die erst seit kurzem Software erstellen. Andererseits zeigt die Geschichte, wie Entwickler den Open-Source-Gedanken in ihren Unternehmen verbreiten können, insbesondere wenn diese Firmen keine klassischen Softwarehersteller sind.
Schneider und Müller zeigen nicht nur, wie Open Source aus rechtlicher Perspektive richtig gemacht werden kann, sondern auch, was das technisch bedeutet und wie es umgesetzt werden kann.
Offene Geräte sind gut für alle
Um die Schritte auf dem Weg zu einem guten Open-Source-Ansatz für Geräte wie dem Smart Home System von Gardena verständlich zu machen, verglichen die Entwickler des Herstellers in ihrem Vortrag die erste und die zweite Generation miteinander.
Treibender Ansatz dabei war laut Müller die Devise, dass Kunden, ""die die Geräte kaufen, diese auch tatsächlich besitzen"". Im Geschäft mit Schläuchen und Brausen ist das eine Selbstverständlichkeit. Beim Vertrieb von Embedded-Geräten samt dazugehöriger Software aus Sicht der Nutzer häufig nicht - so auch bei der ersten Gardena-Generation.
Damals probierte Gardena noch, das Gerät durch technische Maßnahmen so zu sperren, dass Nutzer die darauf laufende Software nicht für eigene Zwecke verwenden und sich auch nicht einfach im Linux-System anmelden konnten. Diverse Anleitungen im Netz erklären inzwischen, wie dies umgangen wird. Die Erkenntnisse seien per Reverse Engineering entstanden und ""besser als meine eigene Methode"", sagte Müller.
Das Unternehmen davon zu überzeugen, von dieser Vorgehensweise Abstand zu nehmen, war laut Müller schwierig. Dass die Entwickler schließlich doch Gehör fanden, lag unter anderem daran, dass die Umsetzung eines zuverlässigen Lockdowns nicht nur technisch sehr anspruchsvoll ist, sondern auch teuer - was aus Sicht des Managements starke Argumente gegen solch ein Vorgehen sind.
Darüber hinaus habe das Entwickler-Team den Rest des Unternehmens von der Perspektive überzeugen können, dass eine Softwareabsicherung gegen lokale Angriffe auf das Gerät nicht relevant für die Angriffsszenarien auf das Smart System von Gardena sind, erzählten die Entwickler. Denn für einen erfolgreichen lokalen Angriff auf das Gateway müssten sich Angreifer bereits im Haus befinden, das Gerät aufschrauben und mit eigener Technik verbinden. Physisch den Wasserzulauf im Garten zu manipulieren, geht auch einfacher, als dies über einen lokalen Angriff auf das Gateway zu probieren.
Experimentierfreudige Bastler und Besitzer des Geräts erhalten deshalb einen passwortlosen Root-Zugriff auf die Linux-Firmware. Voraussetzung dafür ist allerdings, dass Pins für die UART-Schnittstelle auf das Board gelötet werden müssen und die Kommunikation dann auch über UART läuft.
Mainline-Treiber für einfache Updates
Auch die Firmware des Geräts konnte das Team nach seinen eigenen Bedürfnissen und Ansprüchen gestalten, wobei der Open-Source-Gedanke treibend war. Grundlage für das Smart Gateway ist das Mediatek-SoC MT7688. Der vom Hersteller in China dazu ausgelieferte Support-Code - also etwa U-Boot zum Starten und der Linux-Kernel samt Treibern - sind teilweise mehr als zehn Jahre alt. Ein Upstream-Support war zu Projektbeginn nicht vorhanden.
Um das zu ändern, beauftragten die Gardena-Entwickler die U-Boot-Entwickler von Denx damit, den Support in den Hauptzweig zu integrieren. Ähnliches gilt auch für die Linux-Kernel- und Treiber-Patches, die teils aus OpenWRT übernommen wurden. So beauftragte das Team etwa den Maintainer Felix Fietkau des WLAN-Treibers Mt76 für das SoC mit dieser Aufgabe. Fietkau arbeitet an OpenWRT und pflegt dafür den Treiber.
Dank dieser Unterstützung habe das Team sehr schnell einige Probleme lösen können, etwa im Zusammenhang mit der WLAN-Zertifizierung oder mit dem SPI-Nand, erzählten Schneider und Müller. Diese Arbeiten an den Hauptzweigen hätten sie bei ihren Chefs mit dem Argument durchsetzen können, dass dies schlicht die Projektrisiken verringere, was sich rückblickend auch bestätigt habe.
Immerhin hätten die aufgetreten Fehler mit der Hardware durch das kleine Entwicklungsteam wohl nur schwer selbst oder gar nicht gelöst werden können. Die Mainline-Betreuer kennen sich in diesem Entwicklungsbereich besser aus und sind in der Problemlösung dann auch schneller. Das wiederum senkt einen Teil der Kosten für das Projekt - ebenso ein Argument, um das Management vom Mainline-Support zu überzeugen.
Für die Entwickler heißt das, dass sie künftig relativ problemlos zehn Jahre lang Updates für das Gerät pflegen und an Nutzer verteilen können. Und weil das Ganze für die aktuelle Generation des Smart Gateways offenbar so gut geklappt hat, plant das Team nun auch ein ähnliches Vorgehen für die erste Generation.


",de,"











Open Source, as it should be
If developers are looking for solutions with time pressure and then opt for open source, the other should serve as a model, say two Gardena developers in a lecture. It is also a guide to convince the management of the open source idea - which also helps the users.
05 Nov 2019, 06:00 by Sebastian Grüner
The Gateway of the Smart Home System from Gardena controls centrally several more or less smart garden tools of the market leader. Despite initially great problems, the associated software is now on a level that can be described as absolutely desirable from the point of view of the Linux community and the users. How it came about, the two responsible developers Andreas Müller and Reto Schneider reported at the Open Source Summit in Lyon.
They obviously want to serve as a kind of role model with their story: ""Show this presentation to your management!"", They demanded the audience. Based on the call-for-papers, the developers call their path with and on the software ""war narrative"" - which, of course, can only be understood in the figurative sense and as a category for hard-earned experiences.
So Golem.de discovered in spring 2016 in the test of the Gardena Smart System still some obstacles, which were mainly due to the software. And the company had - unfortunately not uncommon - at that time also clearly violated the license terms of the Linux code used.
For the second generation of the device, the team wanted to do everything right from the beginning - on their own motivation - as the two emphasized several times. According to Schneider and Müller, the topic of open source was treated with disinterest and low priority on the management level of Gardena. Therefore, the open-source approach to the device had to be made from scratch.
Critical to the project was also the compulsion to comply with the planned completion date. Because a shift in the market launch of a device can not afford and the market leader. From the start of the project to the planned launch, the team had only one year, ""there was no backup plan,"" says the developer. In a subsequent conversation with Golem.de Schneider also said: ""Open Source has saved us more than once"".
License compliant only by gentle pressure
However, this also had to be taken care of for the right understanding in the company. For example, for the first generation of the device, Gardena did not provide us with the source code under GPL at that time and was not prepared for such requests. As Schneider pointed out in the presentation based on screenshots from the company's internal bug tracker, the compliance with the licenses was initially not considered important enough.
According to the speakers, this was clearly due to the lack of the open source approach at that time. The company had ""little to no experience with electronics or software"", after all, Gardena has so far almost exclusively manufactured and distributed mechanical parts such as hoses, showers, valves or the like. In addition, the approach was prevalent: ""When the product is finished, it is ready"". The idea that software has to be maintained for more than ten years and that the product has to be handled again and again is hard to understand for a hardware company.
Schneider, as he said, tried to make it clear to his superiors that such disinterest in the licensing could hinder or even destroy the smart home business as well as the company's reputation. At first, his arguments were not heard in the company. Schneider's entries in the bugtracker were even downgraded in their priority - on the grounds that the license compliance was ""no release blocker"".
The efforts to achieve license compliance were ultimately successful. Contributed to the lecture, the broad media attention of the lawsuit of the developer Patrick McHardy against the electronics manufacturer Geniatech. Although the claim was withdrawn in the second instance because of the probably low chances of success. In the lower court, the district court of Cologne had threatened but still a fine of 250,000 euros or up to six months as a substitute detention for non-compliance with the license.
The repeated pressure of Schneiders and the reference to the possible massive damage to the company in case of non-compliance were then probably decisive for the fact that Gardena finally met the conditions of the GPL. The development of the code can be understood on Github.
The lecture can unfold in two ways: it could encourage other companies to speak more openly about their problems and the solutions they have found - which is particularly rare today for companies that are just beginning to create software. On the other hand, the story shows how developers can spread the open-source idea in their companies, especially if these companies are not classic software vendors.
Schneider and Müller not only show how open source can be done right from a legal perspective, but also what it means technically and how it can be implemented.
Open devices are good for everyone
To understand the steps towards a good open-source approach for devices such as the Gardena smart home system, the manufacturer's developers compared the first and second generations in their talk.
According to Müller, the guiding principle here was that customers ""who buy the equipment actually own it"". This is a matter of course in the hoses and showers business. From the point of view of users, the distribution of embedded devices and associated software is often not - as in the case of the first Gardena generation.
At that time, Gardena still tried to lock the device by technical measures so that users did not use the software running on it for their own purposes and also could not log in simply in the Linux system. Various manuals on the net now explain how this is bypassed. The findings were created by reverse engineering and ""better than my own method,"" said Müller.
To persuade the company to refrain from doing so was difficult, according to Müller. One of the reasons why the developers were finally heard was that the implementation of a reliable lockdown is not only technically very demanding, but also expensive - which, in the view of management, are strong arguments against such an approach.
In addition, the development team was able to persuade the rest of the company that a software hedge against local attacks on the device was not relevant to the attack scenarios on the Gardena smart system, the developers said. Because for a successful local attack on the gateway, attackers would already be in the house, unscrew the device and connect with their own technology. Physically manipulating the water supply in the garden is also easier than trying to do so by attacking the gateway locally.
Experienced hobbyists and owners of the device therefore receive a passwordless root access to the Linux firmware. The prerequisite for this, however, is that pins for the UART interface must be soldered to the board and the communication then also runs via UART.
Mainline driver for easy updates
Also the firmware of the device could design the team according to its own needs and claims, whereby the open-source thought was impelling. The basis for the Smart Gateway is the Mediatek SoC MT7688. The support code delivered by the manufacturer in China - for example submarine for starting and the Linux kernel including drivers - are sometimes more than ten years old. Upstream support was not available at the beginning of the project.
To change that, the Gardena developers commissioned Denx's submarine developers to integrate support into the main branch. The same applies to the Linux kernel and driver patches, which were partly taken from OpenWRT. For example, the team commissioned maintainer Felix Fietkau of the Mt76 Wi-Fi driver for the SoC with this task. Fietkau works on OpenWRT and cares for the driver.
Thanks to this support, the team was able to solve some problems very quickly, for example in connection with the WLAN certification or with the SPI-Nand, Schneider and Müller told. This work on the main branches could have prevailed on their bosses with the argument that this simply reduces the project risks, which has been confirmed in retrospect.
After all, the errors that occurred with the hardware by the small development team would have been difficult or even impossible to solve. Mainline supervisors are better acquainted with this development area and are faster in problem solving. This in turn cuts some of the cost of the project - as well as an argument to convince the management of Mainline support.
For the developers, this means that they will be able to maintain updates for the device and distribute them to users relatively easily for ten years. And because the whole thing seems to have worked so well for the current generation of the smart gateway, the team is now planning a similar procedure for the first generation.


"
